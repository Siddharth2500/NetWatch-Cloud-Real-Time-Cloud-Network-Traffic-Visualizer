# -*- coding: utf-8 -*-
"""NetWatch-Cloud — Real-Time Cloud Network Traffic Visualizer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y1sEyvWd3UiDWmKNrdVAn4E3hqiXSSDK
"""

# ============================================================
# NetWatch-Cloud — Real-Time Cloud Network Traffic Visualizer
# ============================================================

import os
import random
import time
import json
import matplotlib.pyplot as plt
from datetime import datetime, timedelta

# Configuration
TRAFFIC_DATA = "data/traffic_data.json"
REPORT_IMAGE = "data/traffic_chart.png"
DAYS = 7
INTERFACES = ["eth0", "eth1", "vpn0", "wl0"]

os.makedirs(os.path.dirname(TRAFFIC_DATA), exist_ok=True)
os.makedirs(os.path.dirname(REPORT_IMAGE), exist_ok=True)

# Generate dummy traffic data if not exists
if not os.path.exists(TRAFFIC_DATA):
    traffic = []
    now = datetime.utcnow()
    for d in range(DAYS):
        date = (now - timedelta(days=d)).strftime("%Y-%m-%d")
        for iface in INTERFACES:
            traffic.append({
                "date": date,
                "interface": iface,
                "in_bytes": random.randint(1_000_000, 50_000_000),
                "out_bytes": random.randint(1_000_000, 50_000_000)
            })
    with open(TRAFFIC_DATA, "w", encoding="utf-8") as f:
        json.dump(traffic, f, indent=2)

# Load traffic data
with open(TRAFFIC_DATA, "r", encoding="utf-8") as f:
    data = json.load(f)

# Prepare plot
dates = sorted(list({d["date"] for d in data}))
fig, axs = plt.subplots(len(INTERFACES), 1, figsize=(10, 4 * len(INTERFACES)))

for i, iface in enumerate(INTERFACES):
    subset = [d for d in data if d["interface"] == iface]
    subset_sorted = sorted(subset, key=lambda x: x["date"])
    in_vals = [x["in_bytes"] for x in subset_sorted]
    out_vals = [x["out_bytes"] for x in subset_sorted]
    axs[i].plot(dates, in_vals, label=f"{iface} In (Bytes)", marker='o')
    axs[i].plot(dates, out_vals, label=f"{iface} Out (Bytes)", marker='x')
    axs[i].set_title(f"Network Traffic for {iface}")
    axs[i].legend()
    axs[i].set_xlabel("Date")
    axs[i].set_ylabel("Bytes")
    axs[i].grid(True)

plt.tight_layout()
plt.savefig(REPORT_IMAGE)
plt.show()

print("✅ Traffic visualization saved to", REPORT_IMAGE)